//COMMANDS:

# cc - change color
#returns 1 on success, otherwise 0
{
    "type":"cc",
    "color":"<Color>"
}

# fade - fading [from color] to color over time
#returns 1 on success, otherwise 0
{
    "type":"fade",
    "time":"<Time>",
    ["start":"<Color>",]
    "end":"<Color>"
}

# wait - waiting an amount of time without doing anything
#returns 1 on success, otherwise 0
{
    "type":"wait",
    "time":"<Time>"
}

# loop - loop till a condition stops the loop
#returns 1 on success, otherwise 0
{
    "type":"loop",
    "condition":"<Condition>"
    "commands":[<COMMAND>, <COMMAND_2>, ...]
}

# request - returns runtime/configurated values
# returns "dictionary" (json object) with the keys and their corresponding values
{
    "type":"request"
    "keys":[string, string, string, ...]
}




//DATA TYPES

### <Color> ###
{x|b|f|r:string[:int]}

example1 hex-string:{x:FF00A1}
example2 byte:      {b:255,0,161}
example3 float:     {f:1,0,0.63}
example4 random:    {r:0-1,0.4-0.6,1-1}


### <Time> ###
{c|r:string} | float

example1 constant (5.6 seconds):                {c:5.6}
example2 constant (10.9 seconds):               10.9
example3 random (between 15 and 18.3 seconds):  {r:15,18.3}


### <Condition> ###
{t|c|i|b:string}

example1 after time expires, since first check (5.8 seconds):   {t:5.8}
example2 if a specific color is reached (black):                {c:{b:0,0,0}}
example3 after the condition was checked (10 times):            {i:10}
example4 constant condition value (true):                       {b:1}
example5 constant condition value (false):                      {b:0}
